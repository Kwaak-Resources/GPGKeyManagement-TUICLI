name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  check:
    name: Check
    runs-on: ubuntu-18.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            --no-install-recommends \
            --allow-unauthenticated libgpgme-dev \
            libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: Check the project files
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --locked --verbose

  test:
    name: Test suite
    runs-on: ubuntu-18.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            --no-install-recommends \
            --allow-unauthenticated \
            libgpgme-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: Prepare the test environment
        run: |
          test_dir="$HOME/.cache/gpg-tui/"
          mkdir -p $test_dir
          export GNUPGHOME=$test_dir
          echo $(openssl rand -base64 8) | gpg \
            --pinentry-mode loopback \
            --no-tty --passphrase-fd 0 \
            --quick-gen-key 'Test User <test@example.org>'
          curl "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x1bc755d9fbd24068" | \
            gpg --import
      - name: Setup cargo-tarpaulin
        run: |
          wget https://github.com/xd009642/tarpaulin/releases/download/0.18.0-alpha3/cargo-tarpaulin-0.18.0-alpha3-travis.tar.gz
          tar -xzf cargo-tarpaulin-*.tar.gz
          mv cargo-tarpaulin ~/.cargo/bin/
      - name: Run tests
        run: cargo tarpaulin --out Xml --verbose --features gpg-tests
      - name: Upload reports to codecov
        uses: codecov/codecov-action@v1
        with:
          name: code-coverage-report
          file: cobertura.xml
          flags: unit-tests
          fail_ci_if_error: true
          verbose: true
          token: ${{secrets.CODECOV_TOKEN}}

  clippy:
    name: Lints
    runs-on: ubuntu-18.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            --no-install-recommends \
            --allow-unauthenticated libgpgme-dev \
            libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
          override: true
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: Check the lints
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --verbose -- -D warnings

  rustfmt:
    name: Formatting
    runs-on: ubuntu-18.04
    steps:
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: Check the formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check --verbose

  lychee:
    name: Links
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: Check the links
        uses: lycheeverse/lychee-action@v1
        with:
          args: --exclude "patreon.com|aur.archlinux.org/(.+?).git|mailto:+|%7Buser%7D" -v *.md
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
